dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/main.c)
AM_INIT_AUTOMAKE(ffssclient,0.2)
AM_CONFIG_HEADER(config.h)

dnl Needed version of ffss
ffss_needed="1.0.0"

dnl Change this if libffss is not installed in /usr/local
FFSS_PREFIX=/usr/local/bin
dnl And change line bellow too (--with-ffss)


AM_PATH_GTK(1.2.0, ,
            AC_MSG_ERROR(Cannot find GTK: Is gtk-config in path?))

dnl Checks for programs.
AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

AC_ARG_ENABLE(debug,
[  --enable-debug          Enables debug option (default=no)],
[case "${enableval}" in
  yes) debug=true ;;
  no)  debug=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],[debug=false])
if test "$debug" = "true"; then
  CFLAGS="$CFLAGS ""-DDEBUG "
fi

AC_ARG_ENABLE(malloc_trace,
[  --enable-malloc_trace   Enables malloc trace debug info (default=no)],
[case "${enableval}" in
  yes) malloc_trace=true ;;
  no)  malloc_trace=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-malloc_trace) ;;
esac],[malloc_trace=false])
if test "$malloc_trace" = "true"; then
  CFLAGS="$CFLAGS ""-DSU_MALLOC_TRACE "
fi

AC_ARG_ENABLE(static,
[  --enable-static         Enables static build of ffss-master (default=dynamic)],
[case "${enableval}" in
  yes) static=true ;;
  no)  static=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-static) ;;
esac],[static=false])
if test "$static" = "true"; then
  CFLAGS="$CFLAGS ""-static "
fi

AC_ARG_WITH(ffss, [  --with-ffss=DIR       Bin path to uninstalled copy of libffss (default /usr/local/bin)])

echo -n "checking for ffss-config... "
if test x"$with_ffss" = x ; then
  FFSS_CONFIG=$FFSS_PREFIX/ffss-config
  FFSS_GET_LIBS=--libs
  if test -x "$FFSS_CONFIG"; then
    :
  else
    AC_MSG_ERROR([ffss-config not found. Installed ? Try with configure --with-ffss option])
  fi
else
  FFSS_CONFIG=$with_ffss/ffss-config
  FFSS_GET_LIBS=--libs-static
  FFSS_ADD_PATH=-L$with_ffss/src/.libs
  FFSS_ADD_INCLUDE=-I$with_ffss/src
  if test -x "$FFSS_CONFIG"; then
    :
  else
    AC_MSG_ERROR([ffss-config not found in this directory ($with_ffss)])
  fi
fi

echo "using $FFSS_CONFIG"
dnl Check ffss Version
ffss_vers=`$FFSS_CONFIG --version`
ffss_vers2=`echo $ffss_vers | sed -e 's/\.//g'`
ffss_needed2=`echo $ffss_needed | sed -e 's/\.//g'`
if test "$ffss_vers2" -lt "$ffss_needed2"; then
  AC_MSG_ERROR([Your version of libffss ($ffss_vers) is too old, this version of ffss-master needs libffss >= $ffss_needed])
fi

dnl Get cflags and libs
ffss_libs=`$FFSS_CONFIG $FFSS_GET_LIBS`
ffss_cflags=`$FFSS_CONFIG --cflags`
ffss_bzlib=`$FFSS_CONFIG --with-bzlib`

if test "$ffss_bzlib" = "yes" ; then
  CFLAGS="$CFLAGS -DHAVE_BZLIB"
fi

dnl Checks for Additional stuffs.

dnl Set PACKAGE SOURCE DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`

dnl Set PACKAGE PREFIX
if test "x${prefix}" = "xNONE"; then
  packageprefix=${ac_default_prefix}
else
  packageprefix=${prefix}
fi

dnl Set PACKAGE DATA & DOC DIR
packagedatadir=share/${PACKAGE}
packagedocdir=doc/${PACKAGE}

dnl Set PACKAGE DIRS in config.h.
packagepixmapsdir=${packagedatadir}/pixmaps
packagehelpdir=${packagedatadir}/help
packagemenudir=${packagedatadir}

dnl Subst PACKAGE_DATA_DIR.
NO_PREFIX_PACKAGE_DATA_DIR="${packagedatadir}"
AC_SUBST(NO_PREFIX_PACKAGE_DATA_DIR)
PACKAGE_DATA_DIR="${packageprefix}/${packagedatadir}"
AC_SUBST(PACKAGE_DATA_DIR)

dnl Subst PACKAGE_DOC_DIR.
NO_PREFIX_PACKAGE_DOC_DIR="${packagedocdir}"
AC_SUBST(NO_PREFIX_PACKAGE_DOC_DIR)
PACKAGE_DOC_DIR="${packageprefix}/${packagedocdir}"
AC_SUBST(PACKAGE_DOC_DIR)

dnl Subst PACKAGE_PIXMAPS_DIR.
NO_PREFIX_PACKAGE_PIXMAPS_DIR="${packagepixmapsdir}"
AC_SUBST(NO_PREFIX_PACKAGE_PIXMAPS_DIR)
PACKAGE_PIXMAPS_DIR="${packageprefix}/${packagepixmapsdir}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Subst PACKAGE_HELP_DIR.
NO_PREFIX_PACKAGE_HELP_DIR="${packagehelpdir}"
AC_SUBST(NO_PREFIX_PACKAGE_HELP_DIR)
PACKAGE_HELP_DIR="${packageprefix}/${packagehelpdir}"
AC_SUBST(PACKAGE_HELP_DIR)

dnl Subst PACKAGE_MENU_DIR.
NO_PREFIX_PACKAGE_MENU_DIR="${packagemenudir}"
AC_SUBST(NO_PREFIX_PACKAGE_MENU_DIR)
PACKAGE_MENU_DIR="${packageprefix}/${packagemenudir}"
AC_SUBST(PACKAGE_MENU_DIR)

AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${packageprefix}/${packagedatadir}")
AC_DEFINE_UNQUOTED(PACKAGE_DOC_DIR, "${packageprefix}/${packagedocdir}")
AC_DEFINE_UNQUOTED(PACKAGE_PIXMAPS_DIR, "${packageprefix}/${packagepixmapsdir}")
AC_DEFINE_UNQUOTED(PACKAGE_HELP_DIR, "${packageprefix}/${packagehelpdir}")
AC_DEFINE_UNQUOTED(PACKAGE_MENU_DIR, "${packageprefix}/${packagemenudir}")
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")

LIBS="$LIBS $ffss_libs"
CFLAGS="$CFLAGS $ffss_cflags $FFSS_ADD_PATH $FFSS_ADD_INCLUDE"

AC_OUTPUT([
Makefile
src/Makefile
])

